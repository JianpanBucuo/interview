var WoPay = (function () {

    var versionCompare = function (currVer, promoteVer) {
        currVer = currVer || "0.0.0";
        promoteVer = promoteVer || "0.0.0";
        if (currVer === promoteVer) return false;
        var currVerArr = currVer.split(".");
        var promoteVerArr = promoteVer.split(".");
        var len = Math.max(currVerArr.length, promoteVerArr.length);
        for (var i = 0; i < len; i++) {
            var proVal = promoteVerArr[i],
                curVal = currVerArr[i];
            if (proVal < curVal) {
                return false;
            } else if (proVal > curVal) {
                return true;
            }
        }
        return false;
    };

    var isClientSupport = function () {
        var agent = navigator.userAgent;
        if (agent.indexOf('wopaywallet') != -1) {
            var agentArr = agent.split(' ');
            for (var i = 0; i < agentArr.length; i++) {
                if (agentArr[i].indexOf('wopaywallet') != -1) {
                    var isSupport = versionCompare('3.8.2', agentArr[i].substring(12));
                    if (!isSupport) {
                        console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
                    }
                    return isSupport;
                }
            }
        } else {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return false;
        }
    };

    /*判断设备类型*/
    var deviceType = function () {
        var isAndroid = /(android)/i.test(navigator.userAgent);
        var isIphone = /(iPhone|iPad|iPod)/i.test(navigator.userAgent);
        if (isAndroid) {
            return 1;
        } else if (isIphone) {
            return 2;
        } else {
            return 0;
        }
    };

    var wpWebJavasriptBridge = function (callback) {
        if (deviceType() != 2) {
            if (window.WebViewJavascriptBridge) { return callback(window.WebViewJavascriptBridge); }
        } else {
            if (window.WebViewJavascriptBridge) { return callback(window.WebViewJavascriptBridge); }
            if (window.WVJBCallbacks) { return window.WVJBCallbacks.push(callback); }
            window.WVJBCallbacks = [callback];
            var WVJBIframe = document.createElement('iframe');
            WVJBIframe.style.display = 'none';
            WVJBIframe.src = 'https://__bridge_loaded__';
            document.documentElement.appendChild(WVJBIframe);
            setTimeout(function () { document.documentElement.removeChild(WVJBIframe) }, 0)
        }
    }


    /*执行js交互*/
    var jsInvoke = function (obj) {
        switch (deviceType()) {
            case 1:
                wpWebJavasriptBridge(obj);
                break;
            case 2:
                wpWebJavasriptBridge(obj);
                break;
            default:
                break;
        }
    };


    var wopay_js_invoke = function (a) {
        switch (deviceType()) {
            case 1:
                if (typeof (a[1]) == "undefined") {
                    window.injs.excute(a[0], a[1]);
                } else {
                    var dic = a[1];
                    var b = "{";
                    typeof (dic['packageName']) == "undefined" ? b = b + "\"packageName\":\"\"," : b = b + "\"packageName\":\"" + dic['packageName'] + "\",";
                    typeof (dic['needLogin']) == "undefined" ? b = b + "\"needLogin\":\"\"," : b = b + "\"needLogin\":\"" + dic['packageName'] + "\",";
                    typeof (dic['target']) == "undefined" ? b = b + "\"target\":\"\"," : b = b + "\"target\":\"" + dic['target'] + "\",";
                    typeof (dic['content']) == "undefined" ? b = b + "\"content\":{}," : b = b + "\"content\":" + dic['content'] + ",";
                    typeof (dic['callbackName']) == "undefined" ? b = b + "\"callbackName\":\"\"}" : b = b + "\"callbackName\":\"" + dic['callbackName'] + "\"}";
                    window.injs.excute(a[0], b);
                }
                break;
            case 2:
                window.webkit.messageHandlers.wopay_invoke.postMessage(a);
                break;
            default:
        }
    };


    var WoPay = typeof WoPayExports !== 'undefined' ? WoPayExports : {};

    //是否支持新版本js判断
    WoPay.isClientSupport = isClientSupport;

    //登录
    WoPay.login = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'login';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function () {
                if (params.success) {
                    params.success();
                }
            });
        }

        jsInvoke(options);
    };

    //获取用户信息
    WoPay.interact = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }

        if (params === undefined) {
            params = {};
        }

        params.method = 'interact';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        }

        jsInvoke(options);
    };

    //刷新
    WoPay.refresh = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'refresh';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params);
        }

        jsInvoke(options);
    };

    //返回钱包页
    WoPay.rollback = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }

        if (params === undefined) {
            params = {};
        }
        params.method = 'rollback';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params);
        }

        jsInvoke(options);
    };

    //返回上一页
    WoPay.dismiss = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }

        if (params === undefined) {
            params = {};
        }
        params.method = 'dismiss';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params);
        }

        jsInvoke(options);
    };

    //相机
    WoPay.camera = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'camera';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        }

        jsInvoke(options);
    };

    //相册
    WoPay.photos = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'photos';
        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        }

        jsInvoke(options);
    };

    //联系人
    WoPay.contacts = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'contacts';
        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        }

        jsInvoke(options);
    };

    //返回重定向
    WoPay.backredirect = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'backredirect';
        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function () {
                if (params.redirect) {
                    params.redirect();
                }
            });
        }

        jsInvoke(options);
    };

    //实名
    WoPay.realNameAuth = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'realNameAuth';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        }

        jsInvoke(options);
    };

    //绑卡
    WoPay.bindCard = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'bindCard';
        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        }

        jsInvoke(options);
    };

    //分享
    WoPay.share = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'share';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {

                if (deviceType() == 2) {
                    if (res.result == '1') {
                        if (params.success) {
                            params.success();
                        }
                    } else {
                        if (params.failed) {
                            params.failed(res.reason);
                        }
                    }
                } else {
                    var result = JSON.parse(res);
                    if (result.result == '1') {
                        if (params.success) {
                            params.success();
                        }
                    } else {
                        if (params.failed) {
                            params.failed(result.reason);
                        }
                    }
                }
            });
        }

        jsInvoke(options);
    };

    //分享
    WoPay.rightBar = function (params) {
        if (!isClientSupport()) {
            wopay_js_invoke(params);
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'rightBar';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.display.length > res.index) {
                        var item = params.display[res.index];
                        if (item.success) {
                            item.success();
                        }
                    }
                } else {
                    var result = JSON.parse(res);
                    if (params.display.length > result.index) {
                        var item = params.display[result.index];
                        if (item.success) {
                            item.success();
                        }
                    }
                }
            }, true);
        }

        jsInvoke(options);
    };
    //判断QQ是否安装
    WoPay.isQQInstall = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'isQQInstall';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        }

        jsInvoke(options);
    };
    //打开新页面
    WoPay.newPage = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'newPage';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params);
        }

        jsInvoke(options);
    };

    //指纹支付
    WoPay.fingerPrintAuth = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'fingerPrintAuth';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        }

        jsInvoke(options);
    };

    WoPay.digitalSignature = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'digitalSignature';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        };

        jsInvoke(options);
    };

    //用户反馈
    WoPay.feedback = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'feedback';
        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params);
        };

        jsInvoke(options);
    };

    //扫码识别
    WoPay.smartDetect = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'smartDetect';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        };

        jsInvoke(options);
    };

    //唤起客户端模块
    WoPay.module = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'module';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params);
        };

        jsInvoke(options);
    };

    WoPay.merchantQR = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'merchantQR';

        var options = function (bridge) {

            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        };

        jsInvoke(options);
    };

    WoPay.OCR = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'OCR';

        var options = function (bridge) {

            bridge.callHandler('wopay_invoke', params, function (res) {

                if (deviceType() == 2) {
                    if (res.resultCode == '1') {
                        if (params.success) {
                            params.success(res);
                        }
                    } else {
                        if (params.failed) {
                            params.failed();
                        }
                    }
                } else {
                    var result = params.success(JSON.parse(res));
                    if (result.resultCode == '1') {
                        if (params.success) {
                            params.success(result);
                        }
                    } else {
                        if (params.failed) {
                            params.failed();
                        }
                    }
                }
            });
        };
        jsInvoke(options);
    };

    WoPay.getLocation = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'getLocation';
        var options = function (bridge) {

            bridge.callHandler('wopay_invoke', params, function (res) {

                if (deviceType() == 2) {
                    if (res.resultCode == '1') {
                        if (params.success) {
                            params.success(res);
                        }
                    } else {
                        if (params.failed) {
                            params.failed();
                        }
                    }
                } else {
                    var result = JSON.parse(res);
                    if (result.resultCode == '1') {
                        if (params.success) {
                            params.success(result);
                        }
                    } else {
                        if (params.failed) {
                            params.failed();
                        }
                    }
                }
            });
        };
        jsInvoke(options);
    };


    WoPay.sendSMS = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'sendSMS';
        var options = function (bridge) {

            bridge.callHandler('wopay_invoke', params, function (res) {

                if (deviceType() == 2) {
                    if (res.resultCode == '1') {
                        if (params.success) {
                            params.success(res);
                        }
                    } else {
                        if (params.failed) {
                            params.failed();
                        }
                    }
                } else {
                    var result = JSON.parse(res);
                    if (result.resultCode == '1') {
                        if (params.success) {
                            params.success(result);
                        }
                    } else {
                        if (params.failed) {
                            params.failed();
                        }
                    }
                }
            });
        };
        jsInvoke(options);
    };

    WoPay.getBaseInfo = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'getBaseInfo';
        var options = function (bridge) {

            bridge.callHandler('wopay_invoke', params, function (res) {
                if (deviceType() == 2) {
                    if (params.success) {
                        params.success(res);
                    }
                } else {
                    if (params.success) {
                        params.success(JSON.parse(res));
                    }
                }
            });
        };
        jsInvoke(options);
    };

    WoPay.exRpt = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'exRpt';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {

                if (deviceType() == 2) {
                    if (res.resultCode == '1') {
                        if (params.success) {
                            params.success(res);
                        }
                    } else {
                        if (params.failed) {
                            params.failed(res);
                        }
                    }
                } else {
                    var result = JSON.parse(res);
                    if (result.resultCode == '1') {
                        if (params.success) {
                            params.success(result);
                        }
                    } else {
                        if (params.failed) {
                            params.failed(result);
                        }
                    }
                }
            });
        };

        jsInvoke(options);
    }



    WoPay.motionLiveness = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'motionLiveness';

        var options = function (bridge) {

            bridge.callHandler('wopay_invoke', params, function (res) {

                if (deviceType() == 2) {
                    if (res.resultCode == '1') {
                        if (params.success) {
                            params.success(res);
                        }
                    } else {
                        if (params.failed) {
                            params.failed(res);
                        }
                    }
                } else {
                    var result = JSON.parse(res);
                    if (result.resultCode == '1') {
                        if (params.success) {
                            params.success(result);
                        }
                    } else {
                        if (params.failed) {
                            params.failed(result);
                        }
                    }
                }
            });
        };

        jsInvoke(options);
    }

    WoPay.jdMotionLiveness = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'jdMotionLiveness';

        var options = function (bridge) {

            bridge.callHandler('wopay_invoke', params, function (res) {

                if (deviceType() == 2) {
                    if (res.resultCode == '1') {
                        if (params.success) {
                            params.success(res);
                        }
                    } else {
                        if (params.failed) {
                            params.failed(res);
                        }
                    }
                } else {
                    var result = JSON.parse(res);
                    if (result.resultCode == '1') {
                        if (params.success) {
                            params.success(result);
                        }
                    } else {
                        if (params.failed) {
                            params.failed(result);
                        }
                    }
                }
            });
        };

        jsInvoke(options);
    }


    WoPay.doApplePay = function (params) {
        if (!isClientSupport()) {
            console.log('当前客户端版本过低，请使用沃钱包3.9.0及其以后的版本');
            return;
        }
        if (params === undefined) {
            params = {};
        }
        params.method = 'doApplePay';

        var options = function (bridge) {
            bridge.callHandler('wopay_invoke', params, function (res) {

                if (deviceType() == 2) {
                    if (res.resultCode == '1') {
                        if (params.success) {
                            params.success(res);
                        }
                    } else {
                        if (params.failed) {
                            params.failed(res);
                        }
                    }
                } else {
                    var result = JSON.parse(res);
                    if (result.resultCode == '1') {
                        if (params.success) {
                            params.success(result);
                        }
                    } else {
                        if (params.failed) {
                            params.failed(result);
                        }
                    }
                }
            });
        };

        jsInvoke(options);
    }


    //Android设备
    if (deviceType() == 1) {
        if (window.WebViewJavascriptBridge) {
            return WoPay;
        }

        var messagingIframe;
        var sendMessageQueue = [];
        var receiveMessageQueue = [];
        var messageHandlers = {};

        var CUSTOM_PROTOCOL_SCHEME = 'yy';
        var QUEUE_HAS_MESSAGE = '__QUEUE_MESSAGE__/';

        var responseCallbacks = {};
        var constRespCallbacks = {};
        var uniqueId = 1;

        // 创建队列iframe
        function _createQueueReadyIframe(doc) {
            messagingIframe = doc.createElement('iframe');
            messagingIframe.style.display = 'none';
            doc.documentElement.appendChild(messagingIframe);
        }

        //set default messageHandler  初始化默认的消息线程
        function init(messageHandler) {
            if (WebViewJavascriptBridge._messageHandler) {
                throw new Error('WebViewJavascriptBridge.init called twice');
            }
            WebViewJavascriptBridge._messageHandler = messageHandler;
            var receivedMessages = receiveMessageQueue;
            receiveMessageQueue = null;
            for (var i = 0; i < receivedMessages.length; i++) {
                _dispatchMessageFromNative(receivedMessages[i]);
            }
        }

        // 发送
        function send(data, responseCallback) {
            _doSend({
                data: data
            }, responseCallback);
        }

        // 注册线程 往数组里面添加值
        function registerHandler(handlerName, handler) {
            messageHandlers[handlerName] = handler;
        }
        // 调用线程
        function callHandler(handlerName, data, responseCallback, isConst) {
            _doSend({
                handlerName: handlerName,
                data: data
            }, responseCallback, isConst);
        }

        //sendMessage add message, 触发native处理 sendMessage
        function _doSend(message, responseCallback, isConst) {
            if (responseCallback) {
                var callbackId = 'cb_' + (uniqueId++) + '_' + new Date().getTime();
                if (isConst) {
                    constRespCallbacks[callbackId] = responseCallback;
                } else {
                    responseCallbacks[callbackId] = responseCallback;
                }

                message.callbackId = callbackId;
            }

            sendMessageQueue.push(message);
            messagingIframe.src = CUSTOM_PROTOCOL_SCHEME + '://' + QUEUE_HAS_MESSAGE;
        }

        // 提供给native调用,该函数作用:获取sendMessageQueue返回给native,由于android不能直接获取返回的内容,所以使用url shouldOverrideUrlLoading 的方式返回内容
        function _fetchQueue() {
            var messageQueueString = JSON.stringify(sendMessageQueue);
            sendMessageQueue = [];
            //android can't read directly the return data, so we can reload iframe src to communicate with java
            messagingIframe.src = CUSTOM_PROTOCOL_SCHEME + '://return/_fetchQueue/' + encodeURIComponent(messageQueueString);
        }

        //提供给native使用,
        function _dispatchMessageFromNative(messageJSON) {
            setTimeout(function () {
                var message = JSON.parse(messageJSON);
                var responseCallback;
                //java call finished, now need to call js callback function
                if (message.responseId) {
                    responseCallback = responseCallbacks[message.responseId];
                    if (!responseCallback) {
                        responseCallback = constRespCallbacks[message.responseId];
                        if (responseCallback) {
                            responseCallback(message.responseData);
                        }
                        return;
                    }
                    responseCallback(message.responseData);
                    delete responseCallbacks[message.responseId];
                } else {
                    //直接发送
                    if (message.callbackId) {
                        var callbackResponseId = message.callbackId;
                        responseCallback = function (responseData) {
                            _doSend({
                                responseId: callbackResponseId,
                                responseData: responseData
                            });
                        };
                    }

                    var handler = WebViewJavascriptBridge._messageHandler;
                    if (message.handlerName) {
                        handler = messageHandlers[message.handlerName];
                    }
                    //查找指定handler
                    try {
                        handler(message.data, responseCallback);
                    } catch (exception) {
                        if (typeof console != 'undefined') {
                            console.log("WebViewJavascriptBridge: WARNING: javascript handler threw.", message, exception);
                        }
                    }
                }
            });
        }

        //提供给native调用,receiveMessageQueue 在会在页面加载完后赋值为null,所以
        function _handleMessageFromNative(messageJSON) {
            console.log(messageJSON);
            if (receiveMessageQueue) {
                receiveMessageQueue.push(messageJSON);
            }
            _dispatchMessageFromNative(messageJSON);

        }

        var WebViewJavascriptBridge = window.WebViewJavascriptBridge = {
            init: init,
            send: send,
            registerHandler: registerHandler,
            callHandler: callHandler,
            _fetchQueue: _fetchQueue,
            _handleMessageFromNative: _handleMessageFromNative
        };

        var doc = document;
        _createQueueReadyIframe(doc);
        var readyEvent = doc.createEvent('Events');
        readyEvent.initEvent('WebViewJavascriptBridgeReady');
        readyEvent.bridge = WebViewJavascriptBridge;
        doc.dispatchEvent(readyEvent);
    }

    return WoPay;
})();


if (typeof define === 'function' && define.amd) {
    define(function () { return WoPay; });
} else if (typeof module !== 'undefined' && module != null) {
    module.exports = WoPay
}